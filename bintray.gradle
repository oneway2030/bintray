apply plugin: rootProject.ext.plugins.maven
apply plugin: rootProject.ext.plugins.bintray
// 项目引用的版本号，比如compile 'com.oneway:LogUtil:1.0.0'中的1.0.0就是这里配置的。
version = rootProject.ext.bintray.version
// 定义两个链接，下面会用到
def siteUrl = rootProject.ext.bintray.siteUrl  // 项目主页。
def gitUrl = rootProject.ext.bintray.gitUrl   // Git仓库的url。

// 唯一包名，比如compile 'com.oneway:LogUtil:1.0.0'中的com.oneway就是这里配置的。
group = rootProject.ext.bintray.group
install {
    repositories.mavenInstaller {
        // 生成pom.xml和参数
        pom {
            project {
                packaging rootProject.ext.bintray.packaging
                name rootProject.ext.bintray.name    // 可选，项目名称。
                description rootProject.ext.bintray.description  // 可选，项目描述。
                url siteUrl  // 项目主页，这里是引用上面定义好。
                // 软件开源协议，现在一般都是Apache License2.0吧，复制我的，这里不需要修改。
                licenses {
                    license {
                        name rootProject.ext.bintray.licenseName
                        url rootProject.ext.bintray.licenseUrl
                    }
                }
                //填写开发者基本信息，复制我的，这里需要修改。
                developers {
                    developer {
                        id rootProject.ext.bintray.developerId  // 开发者的id。
                        name rootProject.ext.bintray.developerName  // 开发者名字。
                        email rootProject.ext.bintray.developerEmail  // 开发者邮箱。
                    }
                }
                // SCM，复制我的，这里不需要修改。
                scm {
                    connection gitUrl   // Git仓库地址。
                    developerConnection gitUrl  // Git仓库地址。
                    url siteUrl   // 项目主页。
                }
            }
        }
    }
}


if (project.hasProperty("android")) {
    // 生成jar包的task，不需要修改。
    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }
    // 生成jarDoc的task，不需要修改。
    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        // destinationDir = file("../javadoc/")
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        failOnError false  // 忽略注释语法错误，如果用jdk1.8你的注释写的不规范就编译不过。
    }
} else {
    task sourcesJar(type: Jar, dependsOn: classes) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }
}

// 生成javaDoc的jar，不需要修改。
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

// 这里是读取Bintray相关的信息，我们上传项目到github上的时候会把gradle文件传上去，所以不要把帐号密码的信息直接写在这里，写在local.properties中，这里动态读取。
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.account") // Bintray的用户名。
    key = properties.getProperty("bintray.apikey") // Bintray刚才保存的ApiKey。

    configurations = ['archives']
    pkg {
        repo = rootProject.ext.bintray.bintrayRepo
        // 上传到maven库。（这里要特别注意，如果写了maven报404错误，请在bintray创建一个仓库，这里填改成你创建的仓库的名字，如何创建请看下图。）
        name = rootProject.ext.bintray.binrayLibrary
        // 发布到Bintray上的项目名字，这里的名字不是compile 'com.oneway:LogUtil:1.0.0'中的LogUtil。
        userOrg = rootProject.ext.bintray.bintrayUser // Bintray的用户名，2016年11月更新。
        websiteUrl = siteUrl

        vcsUrl = gitUrl
        licenses = [rootProject.ext.bintray.bintrayLicense]
        publish = true  // 是否是公开项目。
        publicDownloadNumbers = true
        version {
            desc = rootProject.ext.bintray.description
            gpg {
                sign = true
                passphrase = properties.getProperty("bintray.gpg.password")
            }
        }
    }
}
